Task0 # 
runtime: 0(1)
reason:
Each line doesn't change according to an input and is constant time
Total time would be 11 * 0(1) = 0(11) 
Dropping the constant is 0(1)

Task1 # 
runtime: 0(n)
reason:
There is a for-loop 0(n) with opperations of constant time 0(1) and linear time 0(n). This would make the runtime 0(n^2).

Task2 # 
runtime: 0(n^2)
reason:
There is a for-loop 0(n) with opperations of constant time 0(1) and linear time 0(n). This would make the runtime 0(n^2).
Total time would be 4 * 0(1) + n * 0(5) * (n * 0(4) + n * 0(4))
Dropping the constants is 0(1) + 0(n) * 0(n)
Dropping constants futher is 0(n^2)

Task3 # 
runtime: 0(n log n) 
reason:
The sort method's runtime is 0(n log n) so it dominates the runtimes of 0(n) and 0(1). 

Task4 # 
runtime: 0(n^2)
reason:
The runtime for in/not in list/array methods is linear O(n). Because these are used in loops that would be 0(n) * 0(n) or 0(n^2).
